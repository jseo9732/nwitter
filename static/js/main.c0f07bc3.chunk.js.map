{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","auth","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","Nweet","nweetObj","isOwner","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","editing","setEditing","text","newNweet","setNewNweet","toggleEditing","updateDoc","autoFocus","alt","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileInput","useRef","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","collection","current","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","query","orderBy","snapshot","nweetArray","docs","map","data","marginTop","Navigation","display","justifyContent","to","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0f07bc3.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport { authService } from \"fBase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const auth = authService;\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        await createUserWithEmailAndPassword(auth, email, password);\r\n      } else {\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign in\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { authService } from \"fBase\";\r\nimport React from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const auth = authService;\r\n\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      // 깃허브 같은 다른 소셜 로그인 이용하려면 이런 식으로 추가한다.\r\n    }\r\n    await signInWithPopup(auth, provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { deleteObject, ref } from \"@firebase/storage\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  // 삭제 기능\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"정말 이 nweet을 삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n      if (nweetObj.attachmentUrl !== \"\") {\r\n        await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n      }\r\n    }\r\n  };\r\n\r\n  // 수정 기능\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  // 수정 여부 변경 함수\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  // 데이터베이스에 저장 및 화면 표시 기능\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                  value={newNweet}\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img alt=\"\" src={nweetObj.attachmentUrl} />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { addDoc, collection } from \"@firebase/firestore\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const fileInput = useRef();\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        \"data_url\"\r\n      );\r\n      attachmentUrl = await getDownloadURL(response.ref);\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n    fileInput.current.value = \"\";\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n  const onClearPhotoClick = () => {\r\n    setAttachment(\"\");\r\n    fileInput.current.value = \"\";\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        ref={fileInput}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            alt=\"미리보기\"\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearPhotoClick}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import { collection, onSnapshot, query, orderBy } from \"firebase/firestore\";\r\nimport { dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\n\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  // 실시간 반영되지 않는 방식\r\n  //   const getNweets = async () => {\r\n  //     const dbNweets = await getDocs(collection(dbService, \"nweets\"));\r\n  //     dbNweets.forEach((document) => {\r\n  //       const nweetObject = {\r\n  //         ...document.data(),\r\n  //         id: document.id,\r\n  //       };\r\n  //       setNweets((prev) => [nweetObject, ...prev]);\r\n  //     });\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    // getNweets();\r\n    onSnapshot(\r\n      query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\")),\r\n      (snapshot) => {\r\n        const nweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" className=\"homeBtn\">\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\" className=\"profileBtn\">\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span className=\"profileSpan\">\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { authService } from \"fBase\";\r\nimport { signOut, updateProfile } from \"firebase/auth\";\r\nimport { useHistory } from \"react-router\";\r\n// import { collection, getDocs, query, where } from \"@firebase/firestore\";\r\nimport { useState } from \"react\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const auth = authService;\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    signOut(auth);\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  // const getMyNweets = async () => {\r\n  //   const nweets = query(\r\n  //     collection(dbService, \"nweets\"),\r\n  //     where(\"creatorId\", \"==\", userObj.uid)\r\n  //   );\r\n  //   const querySnapshot = await getDocs(nweets);\r\n  //   querySnapshot.forEach((doc) => {\r\n  //     console.log(doc.id, \"=>\", doc.data());\r\n  //   });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getMyNweets();\r\n  // });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div className=\"nweetContainer\">\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fBase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    const auth = authService;\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}